import std/[posix, strformat]

var
  adr: pointer = nil
  (prot, flag) = (PROT_WRITE or PROT_EXEC, MAP_ANONYMOUS or MAP_PRIVATE)
  payload = [ 
    byte  0x55, 0x48, 0x89, 0xE5, 0x48,
    0xB8, 0x6F, 0x72, 0x6C, 0x64, 0x20,
    0x21, 0x0A, 0x00, 0x50, 0x48, 0xB8,
    0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x2C,
    0x20, 0x57, 0x50, 0x48, 0xC7, 0xC0,
    0x01, 0x00, 0x00, 0x00, 0x48, 0xC7,
    0xC7, 0x01, 0x00, 0x00, 0x00, 0x48,
    0x89, 0xE6, 0x48, 0xC7, 0xC2, 0x0F,
    0x00, 0x00, 0x00, 0x0F, 0x05, 0x48,
    0x89, 0xEC, 0x5D, 0xC3 ]

# alloc memory and set it as executable
adr = mmap(nil, sizeof payload, prot, flag, -1, 0)
echo &"{adr.repr} = mmap(nil, {sizeof payload}, {prot}, {flag}, -1, 0)"
# copy the payload to the memory
copyMem(adr, payload[0].addr, sizeof payload)
# cast to function and execute it
cast[proc(){.cdecl.}](adr)()
# free the memory
discard munmap(adr, sizeof payload)
echo "Hello, Nim is Powerful :)"
